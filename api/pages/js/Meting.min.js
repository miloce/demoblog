{"title":"","type":"page","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"\"use strict\"; console.log(\"\\n %c MetingJS v1.2.0 %c https://github.com/metowolf/MetingJS \\n\", \"color: #fadfa3; background: #030307; padding:...","date":"2023-11-05T05:46:25.198Z","updated":"2022-05-17T01:26:52.000Z","comments":true,"path":"api/pages/js/Meting.min.js","covers":null,"content":"\"use strict\";\nconsole.log(\"\\n %c MetingJS v1.2.0 %c https://github.com/metowolf/MetingJS \\n\", \"color: #fadfa3; background: #030307; padding:5px 0;\", \"background: #fadfa3; padding:5px 0;\");\nvar musiclist = [];\nvar apst;\nvar ap;\nvar aplayers = [],\nloadMeting = function() {\n    function a(a, t) {\n        var e = {\n            container: a,\n            audio: t,\n            mini: null,\n            fixed: null,\n            autoplay: !1,\n            mutex: !0,\n            lrcType: 3,\n            listFolded: !1,\n            preload: \"auto\",\n            theme: \"#2980b9\",\n            loop: \"all\",\n            order: \"list\",\n            volume: null,\n            listMaxHeight: null,\n            customAudioType: null,\n            storageName: \"metingjs\"\n        };\n\t\tapst = e;\n        if (t.length) {\n            t[0].lrc || (e.lrcType = 0);\n            var r = {};\n            for (var s in e) {\n                var n = s.toLowerCase(); (a.dataset.hasOwnProperty(n) || a.dataset.hasOwnProperty(s) || null !== e[s]) && (r[s] = a.dataset[n] || a.dataset[s] || e[s], \"true\" !== r[s] && \"false\" !== r[s] || (r[s] = \"true\" == r[s]))\n            }\n\t\t\tap= new APlayer(r)\n            aplayers.push(ap)\n        }\n    }\n    var t = \"https://api.i-meto.com/meting/api?server=:server&type=:type&id=:id&r=:r\";\n\t\n    \"undefined\" != typeof meting_api && (t = meting_api);\n    for (var e = 0; e < aplayers.length; e++) if (!aplayers[e].container.classList.contains(\"no-destroy\")) try {\n        aplayers[e].destroy()\n    } catch(a) {\n        console.log(a)\n    }\n    aplayers = [];\n    for (var r = document.querySelectorAll(\".aplayer\"), s = 0; s < r.length; s++) { (function() {\n            var e = r[s];\n            if (e.classList.contains(\"no-reload\")) return \"continue\";\n            if (e.classList.contains(\"no-destroy\") && e.classList.add(\"no-reload\"), e.dataset.id) {\n                var n = e.dataset.api || t;\n                n = n.replace(\":server\", e.dataset.server),\n                n = n.replace(\":type\", e.dataset.type),\n                n = n.replace(\":id\", e.dataset.id),\n                n = n.replace(\":auth\", e.dataset.auth),\n                n = n.replace(\":r\", Math.random());\n                var o = new XMLHttpRequest;\n                o.onreadystatechange = function() {\n                    if (4 === o.readyState && (o.status >= 200 && o.status < 300 || 304 === o.status)) {\n                        var t = JSON.parse(o.responseText);\n\t\t\t\t\t\tmusiclist = t ;\n\t\t\t\t\t\t\tconsole.log(musiclist);\n                        a(e, t)\n                    }\n                },\n                o.open(\"get\", n, !0),\n                o.send(null)\n            } else if (e.dataset.url) {\n\t\t\t\t\n                var l = [{\n                    name: e.dataset.name || e.dataset.title || \"Audio name\",\n                    artist: e.dataset.artist || e.dataset.author || \"Audio artist\",\n                    url: e.dataset.url,\n                    cover: e.dataset.cover || e.dataset.pic,\n                    lrc: e.dataset.lrc,\n                    type: e.dataset.type || \"auto\"\n                }];\n\t\t\t\n                a(e, l)\n\t\t\t\n            }\n        })()\n    }\n};\ndocument.addEventListener(\"DOMContentLoaded\", loadMeting, !1);","count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"toc":"","data":[]}